name: Version Bump and Release

on:
  workflow_dispatch:
    inputs:
      version_type:
        description: 'Version bump type'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major
      create_release:
        description: 'Create GitHub release after version bump'
        required: false
        default: true
        type: boolean

jobs:
  version-bump:
    name: Bump Version
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Configure Git
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

      - name: Bump version
        id: version_bump
        run: |
          OLD_VERSION=$(node -p "require('./package.json').version")
          npm version ${{ github.event.inputs.version_type }} --no-git-tag-version
          NEW_VERSION=$(node -p "require('./package.json').version")
          echo "old_version=$OLD_VERSION" >> $GITHUB_OUTPUT
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
          echo "Bumped version from $OLD_VERSION to $NEW_VERSION"

      - name: Commit and push version bump
        run: |
          git add package.json package-lock.json
          git commit -m "Bump version to ${{ steps.version_bump.outputs.new_version }}"
          git push

      - name: Create Git tag
        run: |
          git tag "v${{ steps.version_bump.outputs.new_version }}"
          git push origin "v${{ steps.version_bump.outputs.new_version }}"

      - name: Create GitHub Release
        if: ${{ github.event.inputs.create_release == 'true' }}
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "v${{ steps.version_bump.outputs.new_version }}"
          release_name: "Release v${{ steps.version_bump.outputs.new_version }}"
          body: |
            ## Changes in v${{ steps.version_bump.outputs.new_version }}
            
            Auto-generated release from version bump (${{ github.event.inputs.version_type }}).
            
            **Previous version:** ${{ steps.version_bump.outputs.old_version }}
            **New version:** ${{ steps.version_bump.outputs.new_version }}
            
            See the [changelog](CHANGELOG.md) for detailed changes.
          draft: false
          prerelease: false