name: CI/CD Pipeline

on:
  push:
    branches: [master, develop]
  pull_request:
    branches: [master]
  release:
    types: [published]
  workflow_dispatch: # Allow manual trigger

jobs:
  test:
    name: Test & Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: [20.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      - name: Install dependencies
        run: |
          npm ci
          npm install -g @vscode/vsce
        env:
          PUPPETEER_SKIP_CHROMIUM_DOWNLOAD: true

      - name: Run linting
        run: npm run lint
        continue-on-error: true

      - name: Run tests
        run: npm test
        continue-on-error: true

      - name: Compile TypeScript
        run: npm run compile

      - name: Package extension
        shell: bash
        run: |
          echo "Current directory contents:"
          ls -la
          echo "Out directory contents:"
          ls -la out/ || echo "No out directory"
          echo "Node version:"
          node --version
          echo "NPM version:"
          npm --version
          echo "VSCE version:"
          vsce --version || echo "VSCE not found globally"
          npm run package
        env:
          NODE_OPTIONS: "--experimental-global-webcrypto"

      - name: Upload VSIX artifact
        uses: actions/upload-artifact@v4
        with:
          name: extension-${{ matrix.os }}-node${{ matrix.node-version }}
          path: "*.vsix"
          retention-days: 30

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: |
          npm ci
          npm install -g @vscode/vsce
        env:
          PUPPETEER_SKIP_CHROMIUM_DOWNLOAD: true

      - name: Run security audit
        run: npm audit --audit-level moderate
        continue-on-error: true

      - name: Check for high/critical vulnerabilities
        run: npm audit --audit-level high

  publish:
    name: Publish to Marketplace
    needs: [test, security]
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: |
          npm ci
          npm install -g @vscode/vsce@2.32.0



      - name: Compile TypeScript
        run: npm run compile

      - name: Package extension
        run: npm run package

      - name: Debug publisher info
        run: |
          echo "VSCE version:"
          vsce --version
          echo "Package.json publisher:"
          grep -o '"publisher": "[^"]*"' package.json
          echo "Package.json version:"
          grep -o '"version": "[^"]*"' package.json
        env:
          VSCE_PAT: ${{ secrets.VSCE_PAT }}

      - name: Publish to VS Code Marketplace
        run: vsce publish --packagePath *.vsix
        env:
          VSCE_PAT: ${{ secrets.VSCE_PAT }}

      - name: Publish to Open VSX Registry
        run: npx ovsx publish *.vsix
        env:
          OVSX_PAT: ${{ secrets.OVSX_PAT }}
        continue-on-error: true
